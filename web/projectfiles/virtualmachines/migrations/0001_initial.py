# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-19 19:22
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('displayName', models.CharField(blank=True, max_length=128)),
                ('title', models.CharField(max_length=128)),
                ('slug', models.SlugField(help_text=b'Suggested value automatically generated from title. Must be unique.', max_length=100, unique=True, verbose_name=b'Slug')),
                ('content', ckeditor.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Help Topics',
            },
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('displayName', models.CharField(blank=True, max_length=128)),
                ('title', models.CharField(max_length=128)),
                ('about', ckeditor.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Home',
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('displayName', models.CharField(blank=True, max_length=128)),
                ('title', models.CharField(max_length=128)),
                ('slug', models.SlugField(help_text=b'Suggested value automatically generated from title. Must be unique.', max_length=100, unique=True, verbose_name=b'Slug')),
                ('product1', models.CharField(blank=True, max_length=128, verbose_name=b'Product1 Name')),
                ('website1', models.URLField(blank=True, verbose_name=b'Website1')),
                ('about1', ckeditor.fields.RichTextField(blank=True, verbose_name=b'About1')),
                ('product2', models.CharField(blank=True, max_length=128, verbose_name=b'Product2 Name')),
                ('website2', models.URLField(blank=True, verbose_name=b'Website2')),
                ('about2', ckeditor.fields.RichTextField(blank=True, verbose_name=b'About2')),
                ('name', models.TextField(blank=True, verbose_name=b'AMI Name')),
                ('description', models.TextField(blank=True, verbose_name=b'AMI Description')),
                ('fileSize', models.TextField(blank=True, verbose_name=b'File Size')),
                ('ID', models.TextField(blank=True, verbose_name=b'ID')),
                ('OS', models.TextField(blank=True, verbose_name=b'Operating System')),
                ('appInstalls', models.TextField(blank=True, verbose_name=b'Applications Installed')),
                ('server', models.TextField(blank=True, verbose_name=b'Server')),
                ('serverAdditions', models.TextField(blank=True, verbose_name=b'Server Additions')),
                ('plugins', models.TextField(blank=True, verbose_name=b'Plugins')),
                ('version', models.CharField(blank=True, max_length=128)),
                ('lastModified', models.DateTimeField(blank=True, verbose_name=b'Last Modified')),
                ('lastTested', models.DateTimeField(blank=True, verbose_name=b'Last Tested')),
                ('views', models.IntegerField(default=0, null=True)),
                ('userTests', models.IntegerField(default=0, null=True)),
                ('notes', ckeditor.fields.RichTextField(blank=True, verbose_name=b'Notes')),
                ('readMe', models.URLField(blank=True, verbose_name=b'ReadMe')),
                ('launch', models.URLField(blank=True, verbose_name=b'Launch URL')),
                ('download', models.URLField(blank=True, verbose_name=b'Download URL')),
                ('quickdownload', models.BooleanField(default=False, verbose_name=b'Quick Download from homepage?')),
                ('quicklaunch', models.BooleanField(default=False, verbose_name=b'Quick Launch from homepage?')),
            ],
            options={
                'verbose_name_plural': 'Specifications',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text=b'Maximum 250 characters.', max_length=250)),
                ('slug', models.SlugField(blank=True, help_text=b'Suggested value automatically generated from title. Must be unique.', max_length=100, unique=True, verbose_name=b'Slug')),
                ('description', ckeditor.fields.RichTextField(blank=True)),
            ],
            options={
                'ordering': ['title'],
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
                ('slug', models.SlugField(blank=True, help_text=b'Suggested value automatically generated from title. Must be unique.', max_length=100, unique=True, verbose_name=b'Slug')),
                ('description', ckeditor.fields.RichTextField(blank=True)),
            ],
            options={
                'ordering': ['title'],
                'verbose_name_plural': 'Types',
            },
        ),
        migrations.AddField(
            model_name='specification',
            name='tags',
            field=models.ManyToManyField(to='virtualmachines.Tag'),
        ),
        migrations.AddField(
            model_name='specification',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='virtualmachines.Type'),
        ),
    ]
